
2017.6.6

昨天 15:15
黄鸿杰
鸿杰
目前在资源共享平台的许多adaptor调用thrift服务带分页口的时候，由于thrift服务返回
Map<ThriftPage,List<?>>形式数据，许多实现在取thriftPage时
(com.fjhb.thriftpage.v1.thrift.Page)map.keySet().toArray()[0];
使用toArray()消耗内存复制成一个数组不说还带强转,
再后面取数据时又来一次
map.get(map.keySet().toArray()[0]);


取key第一个请使用thriftPage=map.keySet().iterator().next()即可
后续取数据map.get(thriftPage);
节约系统降低局部gc,从点滴做起

林存回
1

黄鸿杰
鸿杰
java服务之间的调用就没必要搞个adaptor又搞一个和服务一样的对象出来

黄鸿杰
鸿杰
不停的ModelMapper.map
这也是消耗系统资源的
无意义的转换

马文亮
感觉这种key跟value都要取值的map就直接用entry遍历就好了，没必要取key在获取value

黄鸿杰
鸿杰
因为thrift的约定map中只有一条map.entrySet().iterator().next();获取Map.Entry也是可以的
关于adaptor的thrift服务的接口Page的返回值把泛型带上，这样其它调用人员就可以知道该Page返回值是什么

